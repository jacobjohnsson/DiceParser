/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package parser;
import expression.*;

import java.util.Iterator;
import tokenizer.TokenIterator;
import tokenizer.Token;

public class Main {
  public static void main(String[] args) {
    new Main().run(args);
  }

  public void run(String[] args) {
    test();
    String input = "(2+(-9)/3)*4.";
    Recognizer recognizer = new Recognizer(input);
    try {
      recognizer.recognize();
    } catch(Exception e) {
      System.out.println("Recognition went wrong.");
      System.out.println(e.getMessage());
      e.printStackTrace();
    }

    Parser parser = new Parser(input);
    try {
      Expression expr = parser.parse();
      System.out.println("Evaluation: " + expr.eval());
    } catch(Exception e) {
      System.out.println("Parsing went wrong.");
      System.out.println(e.getMessage());
      e.printStackTrace();
    }

  }

  private void test() {
    Iterator<Token> tokenIt = new TokenIterator("1");

    for (int i = 0; tokenIt.hasNext(); i++) {
      System.out.println("Token " + i + ": " + tokenIt.next());
    }

    System.out.println("-----------");

    Iterator<Token> tokenIt2 = new TokenIterator("1+1d6");

    for (int i = 0; tokenIt2.hasNext(); i++) {
      System.out.println("Token " + i + ": " + tokenIt2.next());
    }
  }


}
